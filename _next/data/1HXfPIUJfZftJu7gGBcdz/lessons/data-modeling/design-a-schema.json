{"pageProps":{"post":{"attributes":{"description":"How to design a schema"},"html":"<p>We&#39;re not building a UI for this API in this course. However, having a UI design is helpful when designing your models. Knowing what data is required in a UI gives you hints on what needs to be recorded in a DB.\n<br></p>\n<p>We&#39;ll be using the design <a href=\"https://www.framer.com/templates/chronos/\">here</a> as an imaginary ChangeLog app. Let&#39;s observe this UI and figure out what resources we need to record in our DB.</p>\n<br>\nSo it looks like we'll need at least the following:\n* `Update` - title, body, asset, status (in progress, launched), created at, and version\n* `Update Point` - belongs to an update, type (feature, improvement, bug)\n* `Feature`\n<br>\nAnd of course standard things like users. There will probably be supporting models that we create to help with querying and other logic like authentication.\n","slug":"design-a-schema","title":"Design a Schema","section":"Data Modeling","icon":"shapes","filePath":"/home/runner/work/API-design-v4/API-design-v4/lessons/05-data-modeling/A-design-a-schema.md","nextSlug":"/API-design-v4/lessons/data-modeling/creating-models","prevSlug":"/API-design-v4/lessons/intro-to-prisma/db-setup"}},"__N_SSG":true}