{"pageProps":{"post":{"attributes":{},"html":"<p>Let&#39;s create a new file <code>src/config/index.ts</code>. Then, for every environment, we&#39;ll create a file. Those enviroments are local, staging, and production.\n<br>\n<br></p>\n<p>So create, <code>src/config/local.ts</code>, <code>src/config/staging.ts</code>, <code>src/config/prod.ts</code>. Each of one these files will be used to configure variables for their matching environment.</p>\n<br>\nNext, we'll merge the configs together, giving us our final config that we can use anywhere.\n<br>\nIn `src/config/index.ts`\n\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> merge <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;lodash.merge&quot;</span>;\n\n<span class=\"hljs-comment\">// make sure NODE_ENV is set</span>\nprocess.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NODE_ENV</span> = process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NODE_ENV</span> || <span class=\"hljs-string\">&quot;development&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> stage = process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">STAGE</span> || <span class=\"hljs-string\">&quot;local&quot;</span>;\n<span class=\"hljs-keyword\">let</span> envConfig;\n\n<span class=\"hljs-comment\">// dynamically require each config depending on the stage we&#x27;re in</span>\n<span class=\"hljs-keyword\">if</span> (stage === <span class=\"hljs-string\">&quot;production&quot;</span>) {\n  envConfig = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;./prod&quot;</span>).<span class=\"hljs-property\">default</span>;\n} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (stage === <span class=\"hljs-string\">&quot;staging&quot;</span>) {\n  envConfig = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;./staging&quot;</span>).<span class=\"hljs-property\">default</span>;\n} <span class=\"hljs-keyword\">else</span> {\n  envConfig = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;./local&quot;</span>).<span class=\"hljs-property\">default</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> defaultConfig = {\n  stage,\n  <span class=\"hljs-attr\">dbUrl</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">DATABASE_URL</span>,\n  <span class=\"hljs-attr\">jwtSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span>,\n  <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span>,\n  <span class=\"hljs-attr\">logging</span>: <span class=\"hljs-literal\">false</span>,\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">merge</span>(defaultConfig, envConfig);\n</code></pre>\n","slug":"configs","title":"Configs","section":"Global Config","icon":"globe-africa","filePath":"/home/runner/work/API-design-v4/API-design-v4/lessons/10-global-config/B-configs.md","nextSlug":"/API-design-v4/lessons/perf/async-everything","prevSlug":"/API-design-v4/lessons/global-config/env-and-stage"}},"__N_SSG":true}